How this was created:
I created this game as a series of assignments for Com S 327 (Advanced Programming Techniques) 
at Iowa State University. Each week, the professor assigned a portion of the project in the form 
of a pdf document specifying design requirements; each assignment building upon code written in
previous weeks. After each assignmnent's due date, the professor would release a solution drop 
for students to use as they complete the next week's assignment. I took it as a challenge to write 
the entirety of the project myself, in one file (now over 4,000 lines), building upon my own code
rather than the professor's. This resulted in a project unique to me, but with some unique design 
characteristics and bugs. While the project isn't perfect, I'm still proud to have created a mostly 
reliable game, and have taken this semester as an incredible learning experience. 

To compile and run my code: 

***Full Exposure*** my game contains some bugs, it sometimes crashes unexpectedly for apparently no reason
  Don't be alarmed, simply run the game again and enjoy from the beginning :)

First, download a zip file of this project from Github, then unzip the file. The project should unzip 
into a folder called Pokemon-main. Use the command line to cd to the directory:
(cd Downloads)->(cd Pokemon-main). 
Type 'make' to compile. Once the project is built, type './pokemon' in order to run the game

Full Difficulty- in order to disable flying and gain the entire experience, add tag -f after './pokemon'
Number of Trainers- be default 10 opposing trainers are spawned into each map, alter the number by adding 
tag -n x Where x is the number of trainers you'd like to spawn into each map

For example, to run a game with flying disabled and 20 opponets on each page, use command: './pokemon -f -n 20'

To play my game:
Upon compilation, the user is promted to select a starter pokemon. Next, the user is spawned in the center 
'map' in the game's 'world'. The world consists of over 160,000 maps (401 x 401). The user can freely move 
between maps, battle other trainers, encounter wild pokemon, and enter buildings. I've designed my game to 
prompt the user for input outside of the main game interface. However, there are some commands which the 
user should know before running the game. Use keys: 
'h'- left
'j'- down
'k'- up
'l'- right 
'y'- up and left (diagonally)
'u'- up and right (diagonally)
'b'- down and left (diagonally)
'n'- down and right (diagonally)
't'- displays a list of all npc trainers on current map
'f'- allows the user to fly to any map (can be turned off at runtime)
'B'- open bag to use healing potion or revive

You can also use WASD to move around for a simpler experience

How the game works:
Before the player is prompted to choose a starter pokemon, the game allocates memory for all 160,000+ maps including each map's characters, 
then pokemon data is parsed from a CSV database, the first map is created, and the player is spawned after they choose a starter pokemon. 
Character movement runs based off of a loop which checks which character's turn it is, and moves them to their new location. Game 
interactions are triggered when the pc is on the same space as another trainer, or if they encounter a wild pokemon (10 % chance in tall 
grass). 

Each map has 4 gates, each leading to neighboring maps, however gates along the edge are closed. Maps are generated randomly and only when 
the player visits the map. Map gates match up with neighboring map gates; when the player enters a neighboring map the map's data is saved, 
then the player is spawned in the correct location (just inside the gate on the new map). If the player were to go back to the first 
(original) map, the existing map's data is loaded and the pc is spawned back into the first map.

The CSV database consists of 9 CSV files which is included in this repository, each line in the 9 CSV files is stored as an instance of an 
object in a global vector which can be referenced throughout the program. This consists of pokemon from all generations of pokemon games 
and was provided to us by our professor. Pokemon are spawned using a random distribution meaning all pokemon can spawn in any instance.

By default, each map contains 10 npc's, each holding anywhere between 1 and 6 pokemon. The pc and the 10 npc's are stored in an array of 
Characters which are associated with each map. If the pc isn't currently on a map, that map's pc character is null, meaning there's only 
one pc in the game. All characters have a time penalty, which corresponds to the type of terrain they are on. This time penalty member also 
allows each trainer to be put in an order of turn, allowing trainers to move one at a time, waiting for input when it's the pc's turn.

Each character holds anywehre between 1 and 6 pokemon. Pokemon, along with their moves and stats are loaded from the CSV database. The pc 
is spawned with a starter pokemon, but can obtain more by capturing wild pokemon in battle. If all of a trainer's pokemeon are knocked out 
(have 0 hp), they are considered 'defeated' and cannot battle. Pokemon battles (wild and trainer) are turn based. Each pokemon first 
chooses a move (pc by input, and npc by random) After that, the move with highest priority is executed first, then the other move. If a pokemon is knocked out (has 0 hp) it cannot attack. 
